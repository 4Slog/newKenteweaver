// Mocks generated by Mockito 5.4.5 from annotations
// in kente_codeweaver/test/unit/services/achievement_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i6;

import 'package:kente_codeweaver/models/audio_model.dart' as _i5;
import 'package:kente_codeweaver/services/audio_service.dart' as _i4;
import 'package:kente_codeweaver/services/storage_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i2.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Map<String, Map<String, dynamic>>> getAdaptiveProfiles() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAdaptiveProfiles,
          [],
        ),
        returnValue: _i3.Future<Map<String, Map<String, dynamic>>>.value(
            <String, Map<String, dynamic>>{}),
      ) as _i3.Future<Map<String, Map<String, dynamic>>>);

  @override
  _i3.Future<bool> saveAdaptiveProfiles(
          Map<String, Map<String, dynamic>>? profiles) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAdaptiveProfiles,
          [profiles],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<Map<String, dynamic>?> getUserProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [userId],
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);

  @override
  _i3.Future<bool> saveUserProfile(
    String? userId,
    Map<String, dynamic>? profile,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserProfile,
          [
            userId,
            profile,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String?> read(String? key) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [key],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<bool> write(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<Set<String>> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: _i3.Future<Set<String>>.value(<String>{}),
      ) as _i3.Future<Set<String>>);
}

/// A class which mocks [AudioService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioService extends _i1.Mock implements _i4.AudioService {
  MockAudioService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isMusicEnabled => (super.noSuchMethod(
        Invocation.getter(#isMusicEnabled),
        returnValue: false,
      ) as bool);

  @override
  bool get isSoundEnabled => (super.noSuchMethod(
        Invocation.getter(#isSoundEnabled),
        returnValue: false,
      ) as bool);

  @override
  double get musicVolume => (super.noSuchMethod(
        Invocation.getter(#musicVolume),
        returnValue: 0.0,
      ) as double);

  @override
  double get soundVolume => (super.noSuchMethod(
        Invocation.getter(#soundVolume),
        returnValue: 0.0,
      ) as double);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playSoundEffect(_i5.AudioType? type) => (super.noSuchMethod(
        Invocation.method(
          #playSoundEffect,
          [type],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playMusic(_i5.AudioType? type) => (super.noSuchMethod(
        Invocation.method(
          #playMusic,
          [type],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void stopMusic() => super.noSuchMethod(
        Invocation.method(
          #stopMusic,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void toggleSound() => super.noSuchMethod(
        Invocation.method(
          #toggleSound,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void toggleMusic() => super.noSuchMethod(
        Invocation.method(
          #toggleMusic,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setSoundVolume(double? volume) => super.noSuchMethod(
        Invocation.method(
          #setSoundVolume,
          [volume],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMusicVolume(double? volume) => super.noSuchMethod(
        Invocation.method(
          #setMusicVolume,
          [volume],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> fadeOutMusic(
          {Duration? duration = const Duration(seconds: 2)}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fadeOutMusic,
          [],
          {#duration: duration},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<bool> validateSoundAssets() => (super.noSuchMethod(
        Invocation.method(
          #validateSoundAssets,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
