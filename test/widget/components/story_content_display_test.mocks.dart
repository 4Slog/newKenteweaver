// Mocks generated by Mockito 5.4.5 from annotations
// in kente_codeweaver/test/widget/components/story_content_display_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:kente_codeweaver/models/content_block_model.dart' as _i5;
import 'package:kente_codeweaver/models/emotional_tone.dart' as _i6;
import 'package:kente_codeweaver/services/tts_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TTSService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTTSService extends _i1.Mock implements _i2.TTSService {
  MockTTSService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<bool> get onComplete => (super.noSuchMethod(
        Invocation.getter(#onComplete),
        returnValue: _i3.Stream<bool>.empty(),
      ) as _i3.Stream<bool>);

  @override
  bool get ttsEnabled => (super.noSuchMethod(
        Invocation.getter(#ttsEnabled),
        returnValue: false,
      ) as bool);

  @override
  double get ttsVolume => (super.noSuchMethod(
        Invocation.getter(#ttsVolume),
        returnValue: 0.0,
      ) as double);

  @override
  double get ttsPitch => (super.noSuchMethod(
        Invocation.getter(#ttsPitch),
        returnValue: 0.0,
      ) as double);

  @override
  double get ttsRate => (super.noSuchMethod(
        Invocation.getter(#ttsRate),
        returnValue: 0.0,
      ) as double);

  @override
  String get ttsLanguage => (super.noSuchMethod(
        Invocation.getter(#ttsLanguage),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#ttsLanguage),
        ),
      ) as String);

  @override
  bool get isSpeaking => (super.noSuchMethod(
        Invocation.getter(#isSpeaking),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void addPronunciationGuide(Map<String, String>? guide) => super.noSuchMethod(
        Invocation.method(
          #addPronunciationGuide,
          [guide],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> speak(String? text) => (super.noSuchMethod(
        Invocation.method(
          #speak,
          [text],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> speakAndWait(String? text) => (super.noSuchMethod(
        Invocation.method(
          #speakAndWait,
          [text],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> speakContentBlock(_i5.ContentBlock? block) =>
      (super.noSuchMethod(
        Invocation.method(
          #speakContentBlock,
          [block],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> toggleTTS(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #toggleTTS,
          [enabled],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setVolume(double? volume) => (super.noSuchMethod(
        Invocation.method(
          #setVolume,
          [volume],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setPitch(double? pitch) => (super.noSuchMethod(
        Invocation.method(
          #setPitch,
          [pitch],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setRate(double? rate) => (super.noSuchMethod(
        Invocation.method(
          #setRate,
          [rate],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setLanguage(String? language) => (super.noSuchMethod(
        Invocation.method(
          #setLanguage,
          [language],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setVoice(String? voice) => (super.noSuchMethod(
        Invocation.method(
          #setVoice,
          [voice],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<String>> getAvailableLanguages() => (super.noSuchMethod(
        Invocation.method(
          #getAvailableLanguages,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<List<Map<String, String>>> getAvailableVoices() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableVoices,
          [],
        ),
        returnValue: _i3.Future<List<Map<String, String>>>.value(
            <Map<String, String>>[]),
      ) as _i3.Future<List<Map<String, String>>>);

  @override
  _i3.Future<void> speakWithEmotion(
    String? text,
    _i6.EmotionalTone? tone,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #speakWithEmotion,
          [
            text,
            tone,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
